{"version":3,"sources":["context/socketContext.js","Views/Login.js","api/index.js","components/Chat.js","components/UserList.js","Views/Lobby.js","components/Header.js","components/HowToPlay.js","components/About.js","App.js","index.js"],"names":["SocketContext","React","createContext","SocketContextProvider","props","_useState","useState","_useState2","Object","slicedToArray","username","setusername","_useState3","_useState4","connected","setConnected","_useState5","_useState6","currentChat","setCurrentChat","_useState7","_useState8","allUsers","setAllUsers","_useState9","_useState10","onlineUsers","setOnlineUsers","_useState11","_useState12","offlineUsers","setOfflineUsers","_useState13","_useState14","messages","setMessages","_useState15","_useState16","message","setMessage","socketRef","useRef","_useState17","_useState18","newMessageForUser","setnewMessageForUser","roomJoinCallback","incomingMessages","newMessages","immer","draft","useEffect","online","filter","user","isOnline","offline","storedUserLoggedInInfo","localStorage","getItem","react_default","a","createElement","Provider","value","yourId","current","id","connect","usernamefrom","console","log","io","emit","setItem","on","connect_error","_ref","messageContent","userSender","userReciver","createdAt","push","logOut","removeItem","window","location","reload","handleMessageChange","e","target","sendMessage","length","payload","Date","toISOString","joinRoom","onBadgeChange","children","userNameReducer","state","action","type","val","isValid","trim","passwordReducer","Login","setValue","socket","useContext","signin","setSignin","formIsValid","setFormIsValid","_useReducer","useReducer","_useReducer2","userNameState","dispatchUserName","_useReducer3","_useReducer4","passwordState","dispatchPassword","userNameInputRef","passwordInputRef","userNameIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","Grid","container","className","style","marginTop","Paper","padding","paddinTop","width","margin","elevation","display","alignItems","justifyContent","Tabs","indicatorColor","textColor","onChange","event","newValue","aria-label","Tab","label","onClick","onSubmit","newUser","preventDefault","userName","userPassword","axios","post","then","data","TextField","variant","ref","placeholder","fullWidth","required","Button","color","Chat","body","List","map","index","time","moment","format","date","ListItem","key","ListItemText","primary","secondary","Box","p","Toolbar","Divider","spacing","xs","item","FormControl","name","onKeyPress","IconButton","Send_default","UserList","count","setCount","ListItemButton","sx","pl","Badge","badgeContent","Lobby","onlineOpen","setOnlineOpen","offlineOpen","setOfflineOpen","renderUser","socketId","height","CssBaseline","Drawer","flexShrink","& .MuiDrawer-paper","boxSizing","anchor","maxWidth","bgcolor","component","ListItemIcon","CircleOutlined","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","flexGrow","pages","settings","AppNavBar","_React$useState","_React$useState2","anchorElNav","setAnchorElNav","_React$useState3","_React$useState4","anchorElUser","setAnchorElUser","handleCloseNavMenu","handleCloseUserMenu","react","AppBar","position","zIndex","theme","drawer","Container","disableGutters","Casino_default","md","size","aria-controls","aria-haspopup","currentTarget","Menu_default","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","page","MenuItem","Typography","textAlign","react_router_dom","to","concat","noWrap","my","textDecoration","Tooltip","title","Avatar","alt","toUpperCase","src","mt","disabled","HowToPlay","Paper_Paper","About","App","Fragment","Header","react_router","path","element","Views_Login","ReactDOM","render","socketContext_SocketContextProvider","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.79be7760.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport immer from \"immer\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport const SocketContext = React.createContext({\r\n  //...\r\n});\r\n\r\nexport const SocketContextProvider = (props) => {\r\n  const [username, setusername] = useState(\"\");\r\n  const [connected, setConnected] = useState(false);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [offlineUsers, setOfflineUsers] = useState([]);\r\n  const [messages, setMessages] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const socketRef = useRef();\r\n  const [newMessageForUser, setnewMessageForUser] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    setMessage(\"\");\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    const online = allUsers.filter((user) => user.isOnline === true);\r\n    setOnlineUsers(online);\r\n    const offline = allUsers.filter((user) => user.isOnline === false);\r\n    setOfflineUsers(offline);\r\n  }, [allUsers]);\r\n\r\n  useEffect(() => {\r\n    const storedUserLoggedInInfo = localStorage.getItem(\"isLoggedIn\");\r\n    if (storedUserLoggedInInfo) {\r\n      setusername(storedUserLoggedInInfo)\r\n      setConnected(true);\r\n    }\r\n  }, []);\r\n\r\n  function handleMessageChange(e) {\r\n    setMessage(e.target.value);\r\n  }\r\n\r\n  function sendMessage() {\r\n\r\nif(message.length != 0){\r\n\r\n  const payload = {\r\n    messageContent: message,\r\n    userReciver: currentChat,\r\n    userSender: username,\r\n    createdAt: new Date(),\r\n  };\r\n  \r\n  socketRef.current.emit(\"send message\", payload);\r\n  payload.createdAt = payload.createdAt.toISOString();\r\n  \r\n  const newMessages = immer(messages, (draft) => {\r\n    draft[currentChat].push(payload);\r\n  });\r\n  setMessages(newMessages);\r\n}\r\n  }\r\n\r\n  function roomJoinCallback(incomingMessages, currentChat) {\r\n    const newMessages = immer(messages, (draft) => {\r\n      draft[currentChat] = incomingMessages;\r\n    });\r\n    setMessages(newMessages);\r\n  }\r\n\r\n  function joinRoom(currentChat) {\r\n    if (!messages[currentChat]) {\r\n      const newMessages = immer(messages, (draft) => {\r\n        draft[currentChat] = [];\r\n      });\r\n      setMessages(newMessages);\r\n\r\n      socketRef.current.emit(\"join room\", currentChat, (messages) =>\r\n        roomJoinCallback(messages, currentChat)\r\n      );\r\n    }\r\n\r\n    setCurrentChat(currentChat);\r\n  }\r\n\r\n  function connect(usernamefrom) {\r\n    if(usernamefrom){\r\n      setusername(usernamefrom)\r\n    }\r\n    console.log(\"connecting\");\r\n    setConnected(true);\r\n    socketRef.current = io.connect(\"http://localhost:5000\");\r\n    socketRef.current.emit(\"join server\", username);\r\n    localStorage.setItem(\"isLoggedIn\",username);\r\n\r\n    //NO DATA RENDER\r\n    socketRef.current.on(\"connect\", () => {\r\n      console.log(\"socket connected\");\r\n    });\r\n    socketRef.current.on(\"disconnect\", () => {\r\n      console.log(\"socket disconnect\");\r\n    });\r\n    socketRef.current.on(\"connect_error\", (connect_error) => {\r\n      console.log(\"socket connect_error\", connect_error);\r\n    });\r\n\r\n    socketRef.current.on(\"new user\", (allUsers) => {\r\n      setAllUsers(allUsers);\r\n    });\r\n    socketRef.current.on(\r\n      \"new message\",\r\n      ({ messageContent, userSender, userReciver, createdAt }) => {\r\n        if(username == userReciver){\r\n          setnewMessageForUser(userSender)\r\n        }\r\n        setMessages((messages) => {\r\n          const newMessages = immer(messages, (draft) => {\r\n            if (draft[userSender]) {\r\n              draft[userSender].push({ messageContent, userSender, createdAt });\r\n            } else {\r\n              draft[userSender] = [{ messageContent, userSender, createdAt }];\r\n            }\r\n          });\r\n          return newMessages;\r\n        });\r\n      }\r\n    );\r\n  }\r\n  function logOut(){\r\n    setusername(\"\");\r\n    localStorage.removeItem(\"isLoggedIn\")\r\n    setConnected(false);\r\n    window.location.reload(false)\r\n    socketRef.current.emit(\"disconnect\")\r\n  }\r\n  function onBadgeChange(){\r\n  setnewMessageForUser(\"\")\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider\r\n      value={{\r\n        // -- state\r\n        connected,\r\n        username,\r\n        message,\r\n        newMessageForUser,\r\n        messages,\r\n        yourId: socketRef.current ? socketRef.current.id : \"\",\r\n        allUsers,\r\n        currentChat,\r\n        onlineUsers,\r\n        offlineUsers,\r\n        // -- funcs\r\n        connect,\r\n        logOut,\r\n        handleMessageChange,\r\n        sendMessage,\r\n        joinRoom,\r\n        onBadgeChange,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SocketContext;\r\n","import React, {\r\n  useContext,\r\n  useEffect,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  Tab,\r\n  Tabs,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { createUser, loginUser } from \"api\";\r\nimport { SocketContext } from \"../context/socketContext\";\r\n\r\nconst userNameReducer = (state, action) => {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return { value: action.val, isValid: action.val.trim().length > 0 };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return { value: state.value, isValid: state.value.trim().length > 0 };\r\n  }\r\n  return { value: \"\", isValid: false };\r\n};\r\n\r\nconst passwordReducer = (state, action) => {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return { value: action.val, isValid: action.val.trim().length >= 6 };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return { value: state.value, isValid: state.value.trim().length >= 6 };\r\n  }\r\n  return { value: \"\", isValid: false };\r\n};\r\n\r\nconst Login = (props) => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const socket = useContext(SocketContext);\r\n\r\n  const [signin, setSignin] = useState(true);\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const onTabChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const [userNameState, dispatchUserName] = useReducer(userNameReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n\r\n  const userNameInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const { isValid: userNameIsValid } = userNameState;\r\n  const { isValid: passwordIsValid } = passwordState;\r\n\r\n  useEffect(() => {\r\n    const identifier = setTimeout(() => {\r\n      console.log(\"Checking form validity!\");\r\n      setFormIsValid(userNameIsValid && passwordIsValid);\r\n    }, 500);\r\n\r\n    return () => {\r\n      console.log(\"CLEANUP\");\r\n      clearTimeout(identifier);\r\n    };\r\n  }, [userNameIsValid, passwordIsValid]);\r\n\r\n  const userNameChangeHandler = (event) => {\r\n    dispatchUserName({ type: \"USER_INPUT\", val: event.target.value });\r\n  };\r\n  const passwordChangeHandler = (event) => {\r\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (formIsValid) {\r\n      if (signin) {\r\n        loginUser({\r\n          userName: userNameState.value,\r\n          userPassword: passwordState.value,\r\n        }).then((user) => {\r\n          if (user) {\r\n            socket.connect(user.data.user.userName);     \r\n          }\r\n        });\r\n      } else {\r\n        createUser({\r\n          userName: userNameState.value,\r\n          userPassword: passwordState.value,\r\n        }).then((user) => {\r\n          if (user) {\r\n            socket.connect(user.userName);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const paperStyle = {\r\n    padding: 20,\r\n    paddinTop: 0,\r\n    width: 280,\r\n    margin: \"20px auto\",\r\n  };\r\n\r\n  return (\r\n    <Grid container className=\"Login\" style={{ marginTop: \"80px\" }}>\r\n      <Paper style={paperStyle} elevation={10}>\r\n        <Grid\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Tabs\r\n            value={value}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={onTabChange}\r\n            aria-label=\"disabled tabs example\"\r\n          >\r\n            <Tab label=\"Log In\" onClick={() => setSignin(true)} />\r\n            <Tab label=\"Sign Up\" onClick={() => setSignin(false)} />\r\n          </Tabs>\r\n        </Grid>\r\n        <Grid marginTop=\"40px\">\r\n          <form onSubmit={submitHandler}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              ref={userNameInputRef}\r\n              label=\"Username\"\r\n              placeholder=\"Enter username\"\r\n              value={userNameState.value}\r\n              onChange={userNameChangeHandler}\r\n              fullWidth\r\n              required\r\n            />\r\n            <TextField\r\n              variant=\"standard\"\r\n              ref={passwordInputRef}\r\n              label=\"Password\"\r\n              placeholder=\"Enter password\"\r\n              type=\"password\"\r\n              value={passwordState.value}\r\n              onChange={passwordChangeHandler}\r\n              fullWidth\r\n              required\r\n            />\r\n            <div style={{ marginTop: \"3rem\" }}>\r\n              {signin && (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  variant=\" contained\"\r\n                  fullWidth\r\n                >\r\n                  Log in\r\n                </Button>\r\n              )}\r\n              {signin && (\r\n                <Button\r\n                  onClick={() => {\r\n                    setSignin(false);\r\n                    setValue(1);\r\n                  }}\r\n                  color=\"primary\"\r\n                  variant=\" contained\"\r\n                  fullWidth\r\n                >\r\n                  Create New account\r\n                </Button>\r\n              )}\r\n            </div>\r\n            {!signin && (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\" contained\"\r\n                fullWidth\r\n              >\r\n                Sign up\r\n              </Button>\r\n            )}\r\n          </form>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\nexport default Login;\r\n","import axios from \"axios\";\r\n\r\nconst usersCreateUrl = \"http://localhost:5000/users/signup\";\r\nconst userLoginUrl = \"http://localhost:5000/users/login\";\r\n\r\nexport const createUser = (newUser) => axios.post(usersCreateUrl, newUser);\r\nexport const loginUser = (user) => axios.post(userLoginUrl, user);\r\n","import React, {  useContext, useState } from \"react\";\r\nimport {\r\n    Box,\r\n    CssBaseline,\r\n    Divider,\r\n    FormControl,\r\n    Grid,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    TextField,\r\n    Toolbar,\r\n} from \"@mui/material\";\r\nimport moment from \"moment\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport SocketContext from \"context/socketContext\";\r\n\r\nexport default function Chat(props) {\r\n  const socket = useContext(SocketContext);\r\n  const renderMessages = (message, index) => {\r\n    const time = moment(message.createdAt).format(\"hh:mm\");\r\n    const date = moment(message.createdAt).format(\"MMM Do YY\");\r\n\r\n    return (\r\n      <ListItem key={index}>\r\n        <ListItemText\r\n          primary={message.userSender}\r\n          secondary={message.messageContent}\r\n        />\r\n        <ListItemText secondary={time + date} />\r\n      </ListItem>\r\n    );\r\n  };\r\n\r\n  function handleKeyPress(e) {\r\n    if (e.key === \"Enter\") {\r\n      socket.sendMessage();\r\n    }\r\n  }\r\n  let body;\r\n  if (socket.currentChat && socket.messages[socket.currentChat]) {\r\n    body = (\r\n      <List>{socket.messages[socket.currentChat].map(renderMessages)}</List>\r\n    );\r\n  } else {\r\n    body = <List></List>;\r\n  }\r\n  \r\n  return (\r\n    <Box id=\"box\" p={3}>\r\n      <Toolbar>{socket.currentChat || \"no chat\"}</Toolbar>\r\n      <Divider />\r\n      {socket.currentChat &&  <Grid container spacing={4} alignItems=\"center\">\r\n        <Grid xs={12} item>\r\n          {body}{\" \"}\r\n        </Grid>\r\n\r\n        <Grid xs={10} item>\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              value={socket.message}\r\n              name=\"message\"\r\n              label=\"Type your Message...\"\r\n              onChange={socket.handleMessageChange}\r\n              variant=\"outlined\"\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid xs={2} item>\r\n          <IconButton\r\n            onClick={socket.sendMessage}\r\n            aria-label=\"send\"\r\n            color=\"primary\"\r\n          >\r\n            <SendIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>}\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport SocketContext from \"context/socketContext\";\r\nimport { Badge, ListItemButton, ListItemText } from \"@mui/material\";\r\n\r\nexport default function UserList(props) {\r\n  const socket = useContext(SocketContext);\r\n  const [count, setCount] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if(socket.newMessageForUser == props.userName){\r\n        setCount(count + 1);\r\n        socket.onBadgeChange();\r\n    }\r\n  }, [socket.newMessageForUser])\r\n  \r\n\r\n  return (\r\n    <ListItemButton\r\n      key={props.userName}\r\n      sx={{ pl: 4 }}\r\n      onClick={() =>{\r\n           socket.joinRoom(props.userName)\r\n           setCount(0)\r\n        }}\r\n    >\r\n      <Badge color=\"secondary\" badgeContent={count}>\r\n        <ListItemText primary={props.userName} />\r\n      </Badge>\r\n    </ListItemButton>  \r\n  );\r\n}\r\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Collapse,\r\n  CssBaseline,\r\n  Divider,\r\n  Drawer,\r\n  List,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  Toolbar,\r\n} from \"@mui/material\";\r\nimport SocketContext from \"../context/socketContext\";\r\nimport {\r\n  CircleOutlined,\r\n  ExpandLess,\r\n  ExpandMore,\r\n} from \"@mui/icons-material\";\r\nimport Chat from \"components/Chat\";\r\nimport UserList from \"components/UserList\";\r\n\r\nexport default function Lobby(props) {\r\n  const socket = useContext(SocketContext);\r\n  const [onlineOpen, setOnlineOpen] = useState(true);\r\n  const [offlineOpen, setOfflineOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    socket.connect();\r\n\r\n    return () => {};\r\n  }, []);\r\n\r\n  function renderUser(user) {\r\n    if (user.socketId === socket.yourId) {\r\n      return;\r\n    }\r\n    return (\r\n   <UserList userName ={user.userName}/>\r\n    );\r\n    \r\n  }\r\n  const handleOnlineClick = () => {\r\n    setOnlineOpen(!onlineOpen);\r\n  };\r\n  const handleOfflineClick = () => {\r\n    setOfflineOpen(!offlineOpen);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", height: \"50%\" }}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        sx={{\r\n          width: 240,\r\n          flexShrink: 0,\r\n          \"& .MuiDrawer-paper\": {\r\n            width: 240,\r\n            boxSizing: \"border-box\",\r\n          },\r\n        }}\r\n        variant=\"permanent\"\r\n        anchor=\"left\"\r\n      >\r\n        <Toolbar />\r\n        <List\r\n          sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}\r\n          component=\"nav\"\r\n        >\r\n          <ListItemButton onClick={handleOnlineClick}>\r\n            <ListItemIcon>\r\n              <CircleOutlined style={{ color: \"green\" }} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Online Users\" />\r\n            {onlineOpen ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItemButton>\r\n          <Collapse in={onlineOpen} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {socket.onlineUsers.map(renderUser)}\r\n            </List>\r\n          </Collapse>\r\n        </List>\r\n        <Divider />\r\n        <List\r\n          sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}\r\n          component=\"nav\"\r\n        >\r\n          <ListItemButton onClick={handleOfflineClick}>\r\n            <ListItemIcon>\r\n              <CircleOutlined style={{ color: \"red\" }} />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Offline Users\" />\r\n            {offlineOpen ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItemButton>\r\n          <Collapse in={offlineOpen} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {socket.offlineUsers.map(renderUser)}\r\n            </List>\r\n          </Collapse>\r\n        </List>\r\n      </Drawer>\r\n      <Paper\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 3, margin: 20 }}\r\n        id=\"paper\"\r\n        elevation={5}\r\n      >\r\n        <Toolbar />\r\n        <Chat />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SocketContext from \"context/socketContext\";\r\nimport CasinoIcon from '@mui/icons-material/Casino';\r\n\r\nconst pages = [\"home\", \"how to play\", \"about\"];\r\n//\"Profile\", \"Account\", \"Dashboard\",\r\nconst settings = [\"Logout\"];\r\n\r\nconst AppNavBar = () => {\r\n  const socket = React.useContext(SocketContext);\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n    >\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n  <CasinoIcon/>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\",\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: \"block\", md: \"none\" },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">\r\n                    <Link to={`/${page}`}>{page}</Link>\r\n                  </Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}\r\n          >\r\n            LOGO\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n                key={page}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\r\n              >\r\n                <Link\r\n                  style={{ textDecoration: \"none\", color: \"white\" }}\r\n                  to={`/${page}`}\r\n                >\r\n                  {page}\r\n                </Link>\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar\r\n                  sx={{ bgcolor: socket.connected ? \"lightBlue\" : \"grey\" }}\r\n                  alt={socket.username.toUpperCase()}\r\n                  src=\"/\"\r\n                />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: \"45px\" }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              <MenuItem key={settings[0]} onClick={handleCloseUserMenu}>\r\n                <Button disabled={!socket.connected? \"disabled\": \"\"} textAlign=\"center\" onClick={()=> socket.logOut()}>{settings[0]}</Button>\r\n              </MenuItem>\r\n            \r\n              {/* {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))} */}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default AppNavBar;\r\n","import { Paper } from \"@material-ui/core\";\r\nimport { Grid } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport default function HowToPlay() {\r\n  const paperStyle = {\r\n    padding: 20,\r\n    paddinTop: 0,\r\n    height: \"70vh\",\r\n    width: 280,\r\n    margin: \"20px auto\",\r\n  };\r\n  return (\r\n    <Grid container className=\"Login\" style={{ marginTop: \"80px\" }}>\r\n      <Paper style={paperStyle} elevation={10}>\r\n        <Grid>Just try it on and learn from mistake god damnit</Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Paper } from \"@material-ui/core\";\r\nimport { Grid, Toolbar } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React from \"react\";\r\n\r\nexport default function About() {\r\n  const paperStyle = {\r\n    padding: 20,\r\n    paddinTop: 0,\r\n    height: \"70vh\",\r\n    width: 280,\r\n    margin: \"20px auto\",\r\n  };\r\n  return (\r\n    <Grid container className=\"Login\" style={{ marginTop: \"80px\" }}>\r\n      <Paper style={paperStyle} elevation={10}>\r\n        <Grid\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          It's all about love baby! You can chat! you can play! (Not Yet!, but\r\n          you know...)\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport Login from \"./Views/Login\";\r\nimport \"./App.css\";\r\nimport Lobby from \"Views/Lobby\";\r\nimport SocketContext from \"context/socketContext\";\r\nimport AppNavBar from \"components/Header\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport HowToPlay from \"components/HowToPlay\";\r\nimport About from \"components/About\";\r\n\r\nconst App = () => {\r\n  const socket = useContext(SocketContext);\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"App\">\r\n        <Grid  sx={{ display: 'flex' }}>\r\n        <AppNavBar  />\r\n          <Routes>\r\n            <Route path=\"/\" element={socket.connected? <Lobby/>:<Login/>}/>\r\n            <Route path=\"/Home\" element={socket.connected? <Lobby/>:<Login/>} />\r\n            <Route path=\"/How%20to%20play\" element={<HowToPlay/>} />\r\n            <Route path=\"/About\" element={<About/>} />\r\n          </Routes>\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { SocketContextProvider } from \"context/socketContext\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <SocketContextProvider>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n  </SocketContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}